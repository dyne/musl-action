name: setup-musl-toolchain
description: ðŸš™ reuse musl setup on CI over and over

inputs:
  target_arch:
    description: Target architecture for the musl toolchain
    required: false
    default: x86_64
outputs:
  CC:
    description: "path to C Compiler"
    value: ${{ steps.set-outputs.outputs.CC }}
  CXX:
    description: "path to C++ Compiler"
    value: ${{ steps.set-outputs.outputs.CXX }}
runs:
  using: composite
  steps:
    - name: Set CC and CXX outputs
      id: set-outputs
      shell: bash
      run: |
        case "${{ inputs.target_arch }}" in
          x86_64) exec_name_prefix=x86_64-linux-musl- ;;
          arm_64) exec_name_prefix=aarch64-linux-musl- ;;
          arm_hf) exec_name_prefix=arm-linux-musleabihf- ;;
          riscv_64) exec_name_prefix=riscv_64-linux-musl- ;;
          *) echo "Unsupported architecture: ${{ inputs.target_arch }}" ; exit 1 ;;
        esac
        echo "CC=/opt/musl-dyne/gcc-musl/bin/${exec_name_prefix}gcc" >> $GITHUB_OUTPUT
        echo "CXX=/opt/musl-dyne/gcc-musl/bin/${exec_name_prefix}g++" >> $GITHUB_OUTPUT
    - name: Get SHA256 of dyne-gcc-musl-${{ inputs.target_arch }}.tar.xz
      id: get-sum
      shell: bash
      run: |
        curl -s "https://files.dyne.org/?file=musl/SHA256SUMS.txt" -o checksums.txt
        HASH=$(grep dyne-gcc-musl-${{ inputs.target_arch }}.tar.xz checksums.txt | awk '{print $1}')
        echo "hash=$HASH" >> $GITHUB_OUTPUT
    - name: Cache musl-dyne using SHA256
      id: cache-musl
      uses: actions/cache@v4
      with:
        path: .cache/musl-dyne
        key: musl-dyne-${{ steps.get-sum.outputs.hash }}
    - name: Copy to /opt/musl-dyne if cache hit
      if: steps.cache-musl.outputs.cache-hit == 'true'
      shell: bash
      run: |
        sudo mkdir -p /opt/musl-dyne
        sudo rm -rf   /opt/musl-dyne/*
        sudo cp -a    .cache/musl-dyne/. /opt/musl-dyne/
    - name: Download and extract if cache miss
      if: steps.cache-musl.outputs.cache-hit != 'true'
      shell: bash
      run: |
        wget -O dyne-gcc-musl-${{ inputs.target_arch }}.tar.xz "https://files.dyne.org/?file=musl/dyne-gcc-musl-${{ inputs.target_arch }}.tar.xz"
        mkdir -p .cache/musl-dyne
        tar -xJf dyne-gcc-musl-${{ inputs.target_arch }}.tar.xz -C .cache/musl-dyne --strip-components=1
        rm dyne-gcc-musl-${{ inputs.target_arch }}.tar.xz
        sudo rm -rf /opt/musl-dyne/*
        sudo cp -a .cache/musl-dyne/. /opt/musl-dyne/
